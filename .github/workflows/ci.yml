name: ci

on:
  push:
    branches:
      - master
      - develop
      - beta
      - alpha
  pull_request:

defaults:
  run:
    working-directory: ./ansible_collections/mrichardson03/test_collection

jobs:
  sanity:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2
        with:
          path: ./ansible_collections/mrichardson03/test_collection

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install sanity dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible pycodestyle pylint voluptuous yamllint

      - name: ansible-test sanity
        run: |
          ansible-test sanity

  build:
    name: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          path: ./ansible_collections/mrichardson03/test_collection

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Build collection
        run: |
          ansible-galaxy collection build

  release:
    name: release
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/beta' || github.ref == 'refs/heads/alpha')
    needs: [sanity, build]
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: ./ansible_collections/mrichardson03/test_collection

      - name: Cache npm modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-global-install
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install semantic-release
        run: |
          npm install -g \
          semantic-release@^17.0.4 \
          @semantic-release/exec@^5.0.0 \
          @semantic-release/git@^9.0.0 \
          conventional-changelog-conventionalcommits@^4.2.3

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install Ansible
        run: |
          pip install --upgrade pip
          pip install ansible

      - name: Set up Galaxy auth
        run: |
          mkdir -p ~/.ansible
          echo "token: $GALAXY_API_KEY" > ~/.ansible/galaxy_token
        env:
          GALAXY_API_KEY: ${{ secrets.GALAXY_API_KEY }}
        shell: bash

      - name: Create release and publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

  docs:
    name: docs
    needs: [sanity, build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install documentation utils
        run: |
          pip install Sphinx sphinx-rtd-theme ansible-doc-extractor

      - name: Generate documentation
        run: |
          cd docs
          ansible-doc-extractor --template templates/module.rst.j2 source/modules ../plugins/modules/*.py
          sphinx-build source html

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@3.6.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: docs/html # The folder the action should deploy.
          CLEAN: true # Automatically remove deleted files from the deploy branch
